name: non-regression tests

on: [pull_request]

jobs:

  win64-gui:
    runs-on: windows-2016
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: false
        install: git diffutils make pkg-config mingw-w64-x86_64-gtk2 mingw-w64-x86_64-glib2 mingw-w64-x86_64-gcc mingw-w64-x86_64-ghostscript mingw-w64-x86_64-jq mingw-w64-x86_64-ntldd-git man zip
    - run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: configure
      run: ./configure
    - name: make
      run: nproc && make -j$(nproc)
    - name: check executable
      run: |
          ./dvdisaster.exe --version
          file dvdisaster.exe
          ./dvdisaster.exe --version | grep -q -e dirty -e NOGUI && exit 1
          file dvdisaster.exe | grep -q 'x86-64, for MS Windows'
    - name: prepare dist
      run: ./.github/workflows/make-dist.sh ${{ github.ref }}
      id: dist
    - name: check executability of dist from cmd.exe
      shell: cmd
      run: |
          cd dist
          dvdisaster.exe --version
    - name: regression tests
      run: mkdir /var/tmp/regtest && export REGTEST_NO_UTF8=1 && ./regtest/runtests.sh

  win32-gui:
    runs-on: windows-2016
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW32
        update: false
        install: git diffutils make pkg-config mingw-w64-i686-gtk2 mingw-w64-i686-glib2 mingw-w64-i686-gcc mingw-w64-i686-ghostscript mingw-w64-i686-jq mingw-w64-i686-ntldd-git man zip
    - run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: configure
      run: ./configure
    - name: make
      run: nproc && make -j$(nproc)
    - name: check executable
      run: |
          ./dvdisaster.exe --version
          file dvdisaster.exe
          ./dvdisaster.exe --version | grep -q -e dirty -e NOGUI && exit 1
          file dvdisaster.exe | grep -q '386, for MS Windows'
    - name: prepare dist
      run: ./.github/workflows/make-dist.sh ${{ github.ref }}
      id: dist
    - name: check executability of dist from cmd.exe
      shell: cmd
      run: |
          cd dist
          dvdisaster.exe --version
    - name: regression tests
      run: mkdir /var/tmp/regtest && export REGTEST_NO_UTF8=1 && ./regtest/runtests.sh

  win64-cli:
    runs-on: windows-2016
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: false
        install: git diffutils make pkg-config mingw-w64-x86_64-glib2 mingw-w64-x86_64-gcc mingw-w64-x86_64-ghostscript mingw-w64-x86_64-jq mingw-w64-x86_64-ntldd-git man zip
    - run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: configure
      run: ./configure --with-cli-only
    - name: make
      run: nproc && make -j$(nproc)
    - name: check executable
      run: |
          ./dvdisaster.exe --version
          file dvdisaster.exe
          ./dvdisaster.exe --version | grep -q -e dirty && exit 1
          ./dvdisaster.exe --version | grep -q NOGUI
          file dvdisaster.exe | grep -q 'x86-64, for MS Windows'
    - name: prepare dist
      run: ./.github/workflows/make-dist.sh ${{ github.ref }}
      id: dist
    - name: check executability of dist from cmd.exe
      shell: cmd
      run: |
          cd dist
          dvdisaster.exe --version
    - name: regression tests
      run: mkdir /var/tmp/regtest && export REGTEST_NO_UTF8=1 && ./regtest/runtests.sh

  win32-cli:
    runs-on: windows-2016
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW32
        update: false
        install: git diffutils make pkg-config mingw-w64-i686-glib2 mingw-w64-i686-gcc mingw-w64-i686-ghostscript mingw-w64-i686-jq mingw-w64-i686-ntldd-git man zip
    - run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: configure
      run: ./configure --with-cli-only
    - name: make
      run: nproc && make -j$(nproc)
    - name: check executable
      run: |
          ./dvdisaster.exe --version
          file dvdisaster.exe
          ./dvdisaster.exe --version | grep -q -e dirty && exit 1
          ./dvdisaster.exe --version | grep -q NOGUI
          file dvdisaster.exe | grep -q '386, for MS Windows'
    - name: prepare dist
      run: ./.github/workflows/make-dist.sh ${{ github.ref }}
      id: dist
    - name: check executability of dist from cmd.exe
      shell: cmd
      run: |
          cd dist
          dvdisaster.exe --version
    - name: regression tests
      run: mkdir /var/tmp/regtest && export REGTEST_NO_UTF8=1 && ./regtest/runtests.sh

  linux64-cli:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install prerequisites
      run: sudo apt update && sudo apt install -y libglib2.0-dev ghostscript man jq
    - name: configure
      run: ./configure --with-cli-only
    - name: make
      run: nproc && make -j$(nproc)
    - name: check executability
      run: ./dvdisaster --version
    - name: check executable
      run: file dvdisaster && file dvdisaster | grep -q 'ELF 64'
    - name: prepare dist
      run: ./.github/workflows/make-dist.sh ${{ github.ref }}
    - name: regression tests
      run: mkdir /var/tmp/regtest && export REGTEST_NO_UTF8=1 && ./regtest/runtests.sh

  linux64-gui:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: install prerequisites
      run: sudo apt update && sudo apt install -y libglib2.0-dev ghostscript man jq libgtk2.0-dev
    - name: configure
      run: ./configure
    - name: make
      run: nproc && make -j$(nproc)
    - name: check executability
      run: ./dvdisaster --version
    - name: check executable
      run: file dvdisaster && file dvdisaster | grep -q 'ELF 64'
    - name: prepare dist
      run: ./.github/workflows/make-dist.sh ${{ github.ref }}
    - name: regression tests
      run: mkdir /var/tmp/regtest && export REGTEST_NO_UTF8=1 && ./regtest/runtests.sh

