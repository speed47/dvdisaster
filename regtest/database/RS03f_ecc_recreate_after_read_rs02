45ad4cec0172310e72411d326b8b892c
60c1b01f5a4a62fc6617dce510a9a845
This software comes with  ABSOLUTELY NO WARRANTY.  This
is free software and you are welcome to redistribute it
under the conditions of the GNU GENERAL PUBLIC LICENSE.
See the file "COPYING" for further information.
# *** OpenImageFromDevice(sim-cd) ***
# InquireDevice returned: Simulated CD drive 1.00

Device: sim-cd, Simulated CD drive 1.00
# *** query_type(Simulated CD drive 1.00, 0) ***
# *** get_configuration(Simulated CD drive 1.00) ***
# 8 data len, 9 current
-> profile 9: CD-R
# trying READ DISC INFORMATION for size
# size returned is 32
# trying READ DISC INFORMATION for real info
0000: 00 20 1e 00 00 00 00 00  00 00 00 00 00 00 00 00  . ...... ........ 
0010: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
# status is 1e, disc type 0
#CD: starting media probe
#CD: querying size of READ TOC/PMA/ATIP (for TOC)
#CD: size returned is 12
#CD: querying real READ TOC/PMA/ATIP (for TOC)
0000: 00 0a 00 00 00 14 00 00  00 00 00 00              ........ ....
#CD: control is 0x14
#CD: querying size of READ TOC/PMA/ATIP (for full TOC)
# Warning: Realigning length from 26 to 24
#CD: size returned is 24
#CD: querying real READ TOC/PMA/ATIP (for full TOC)
0000: 00 18 00 01 00 00 00 a0  00 00 00 00 00 00 00 00  ........ ........ 
0010: 00 00 00 00 00 00 00 00                           ........ 
#CD: 1 sessions
#CD: CD medium detected, type: CD-R mode 1
# query_type() returned.
# deciding reading strategy...
Using READ CD.
GetImageFingerprint(16): read & cached

ExamineUDF(Device: Simulated CD drive 1.00)
 Examining the ISO file system...
  Sector 16:
   Volume descriptor type    = 1
   Volume descriptor version = 1
   Standard identifier       = CD001
   -> primary volume descriptor:
    System identifier         : |                                |
    Volume identifier         : |RANDOM IMAGE                    |
    Volume space size         : 21000 sectors
    Volume set size           : 1
    Volume sequence size      : 1
    Logical block size        : 2048
    Path table size           : 10 bytes
    L-Path table location     : 19
    Opt L-Path table location : 0
    M-Path table location     : 20
    Opt M-Path table location : 0
    Volume creation date/time : 16-07-2006 10:35:46.23
    Volume modification d/t   : 16-07-2006 10:35:46.23
    Volume expiration d/t     : 16-07-2106 10:35:46.23
    Volume effective d/t      : 16-07-2006 10:35:46.23
    File structure version    : 1
  Sector 17:
   Volume descriptor type    = 2
   Volume descriptor version = 1
   Standard identifier       = CD001
   -> supplementary volume descriptor: *skipped*
  Sector 18:
   Volume descriptor type    = 255
   Volume descriptor version = 1
   Standard identifier       = CD001
   -> volume descriptor set terminator;
      end of ISO file system parsing.
 Examining the UDF file system...
  not yet implemented.

# *** read_capacity(Simulated CD drive 1.00) ***
 -> 23907
ExamineECC() started
...trying RS01
...trying RS02
RS02Recognize: medium sim-cd
try_sector: trying sector 21000
try_sector: header at 21000: magic cookie found
try_sector: CRC okay
GetImageFingerprint(16): cached
try_sector: fingerprint okay, header good
Root sector search at +0 successful
...augmented image found
Expected size calculated from ecc header: 23908
--> confirmed layout variant 1
Calculated layout for RS02 image:
data sectors      = 21000
crc sectors       = 42
protected sectors = 21044 (incl. 2 hdr sectors)
reed solomon secs = 2820 (30 roots, 225 data)
header repeats    = 22 (using modulo 128)
added sectors     = 2908
total image size  = 23908
medium capacity   = n.a.

Interleaving layout:
94 sectors per ecc layer
first layer sector with CRC data 40 (sector# 21002)

# Calling query_size()
# *** query_size(Simulated CD drive 1.00) ***
Medium size obtained from ECC header: 23908 sectors
# returned: 23908 sectors
Medium "Random Image": CD-R mode 1, 23908 sectors, Ecc, created 16-07-2006.

Creating new rs03f-tmp.iso image.
Reading CRC information from ecc data (RS02) ... RS02LayoutFromImage(): returning cached layout
done.
Waiting 5 seconds for drive to spin up...
GOOD Data md5sum
GOOD CRC md5sum
GOOD ECC md5sum

All sectors successfully read. Checksums match.
CrcBuf contents, image path none (medium):
  crcSize: 23908, dataSectors: 21000, coveredSectors: 21000, allSectors: 23908
  md5State: data_complete image_complete
  data: 9503f278d4550a9507a317664481adf8
  full: 45ad4cec0172310e72411d326b8b892c
  fp sector: 16; 15c0fd35a0cfa0f83b9ccbd8604c2592
  missing crcs: 0

Opening rs03f-tmp.iso
ExamineUDF(File: rs03f-tmp.iso)
 Examining the ISO file system...
  Sector 16:
   Volume descriptor type    = 1
   Volume descriptor version = 1
   Standard identifier       = CD001
   -> primary volume descriptor:
    System identifier         : |                                |
    Volume identifier         : |RANDOM IMAGE                    |
    Volume space size         : 21000 sectors
    Volume set size           : 1
    Volume sequence size      : 1
    Logical block size        : 2048
    Path table size           : 10 bytes
    L-Path table location     : 19
    Opt L-Path table location : 0
    M-Path table location     : 20
    Opt M-Path table location : 0
    Volume creation date/time : 16-07-2006 10:35:46.23
    Volume modification d/t   : 16-07-2006 10:35:46.23
    Volume expiration d/t     : 16-07-2106 10:35:46.23
    Volume effective d/t      : 16-07-2006 10:35:46.23
    File structure version    : 1
  Sector 17:
   Volume descriptor type    = 2
   Volume descriptor version = 1
   Standard identifier       = CD001
   -> supplementary volume descriptor: *skipped*
  Sector 18:
   Volume descriptor type    = 255
   Volume descriptor version = 1
   Standard identifier       = CD001
   -> volume descriptor set terminator;
      end of ISO file system parsing.
 Examining the UDF file system...
  not yet implemented.

ExamineECC() started
...trying RS01
...trying RS02
RS02Recognize: file rs03f-tmp.iso
try_sector: trying sector 21000
try_sector: header at 21000: magic cookie found
try_sector: CRC okay
GetImageFingerprint(16): read & cached
try_sector: fingerprint okay, header good
Root sector search at +0 successful
...augmented image found
Expected size calculated from ecc header: 23908
--> confirmed layout variant 1
Calculated layout for RS02 image:
data sectors      = 21000
crc sectors       = 42
protected sectors = 21044 (incl. 2 hdr sectors)
reed solomon secs = 2820 (30 roots, 225 data)
header repeats    = 22 (using modulo 128)
added sectors     = 2908
total image size  = 23908
medium capacity   = n.a.

Interleaving layout:
94 sectors per ecc layer
first layer sector with CRC data 40 (sector# 21002)

GetImageFingerprint(16): cached
: 23908 medium sectors.
CalcRS03Layout(): removed cached layout from other codec
Calculated layout for RS03 file:
data sectors      = 23908
data padding      = 0
layer size        = 103
total sectors     = 26073
medium capacity   = 0
header position   = 0
first CRC sector  = 2
first ECC sector  = 105
ndata             = 235
nroots            = 20 ( 8.5%)

46 MiB data, 4 MiB ecc (20 roots;  8.5% redundancy).
CrcBufValid: buffer VALID
CrcBuf present, ecc file: using image MD5 sum
Cache allocation: 120320K+8192K+5120K=130M (data+parity+descrambling)
Error correction file "rs03f-tmp.ecc" created.
Make sure to keep this file on a reliable medium.
FreeCrcBuf - buffer cleared
